{"version":3,"sources":["components/card/card.component.jsx","components/card_list/card_list.component.jsx","components/search_box/search_box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","state","likes","setLike","setState","prevState","prevProps","console","log","className","alt","src","this","props","cat","id","username","email","onClick","React","Component","CardList","cats","map","SearchBox","placeholder","handleChange","type","onChange","App","e","searchValue","target","value","fetch","then","response","json","users","catch","err","filteredCats","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGaA,G,kBAAb,4MACIC,MAAQ,CACJC,MAAO,GAFf,EAKIC,QAAU,WACN,EAAKC,UAAS,SAACC,EAAWC,GAEtB,MAAO,CAACJ,MAAOG,EAAUH,MAAQ,MAEjC,kBAAMK,QAAQC,IAAI,EAAKP,MAAMC,WAVzC,uDAcQ,OACE,sBAAKO,UAAU,iBAAf,UACE,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BC,KAAKC,MAAMC,IAAIC,GAAzC,uCAClB,6BAAMH,KAAKC,MAAMC,IAAIE,WACrB,4BAAKJ,KAAKC,MAAMC,IAAIG,QACpB,wCAAWL,KAAKX,MAAMC,SACtB,mBAAGO,UAAU,kBAAkBS,QAASN,KAAKT,QAA7C,6BApBZ,GAA0BgB,IAAMC,YCCnBC,EAAW,SAACR,GAAD,OACpB,qBAAKJ,UAAU,YAAf,SAEQI,EAAMS,KAAKC,KAAI,SAAAT,GAAG,OAClB,cAAC,EAAD,CAAqBA,IAAMA,GAAfA,EAAIC,UCHfS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOjB,UAAU,SAASkB,KAAK,SAASF,YAAaA,EACjDG,SAAUF,MCmCHG,E,kDApCb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAAAI,GACb,EAAK1B,SAAS,CAAE2B,YAAaD,EAAEE,OAAOC,SAdtC,EAAKhC,MAAQ,CACXqB,KAAM,GACNS,YAAa,IALH,E,gEASO,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKlC,SAAS,CAAEkB,KAAMgB,OACpCC,OAAM,SAAAC,GAAG,OAAIjC,QAAQC,IAAIgC,Q,+BAOlB,IAAD,EACuB5B,KAAKX,MAA3BqB,EADD,EACCA,KAAMS,EADP,EACOA,YACRU,EAAenB,EAAKoB,QAAO,SAAA5B,GAAG,OAClCA,EAAIE,SAAS2B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKlC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,cAAC,EAAD,CAAWgB,YAAY,SACrBC,aAAcd,KAAKc,eACrB,cAAC,EAAD,CAAUJ,KAAMmB,W,GA/BNrB,aCOHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f991021.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport class Card extends React.Component {\r\n    state = {\r\n        likes: 0\r\n    };\r\n\r\n    setLike = () => {\r\n        this.setState((prevState, prevProps) => \r\n        {\r\n            return {likes: prevState.likes + 1}\r\n        },\r\n            () => console.log(this.state.likes))\r\n        }\r\n\r\n    render() {\r\n        return (\r\n          <div className='card-container'>\r\n            <img alt='cat' src={`https://robohash.org/${this.props.cat.id}?set=set4&size=180x280&bgset=bg1 `}/>\r\n            <h2>{ this.props.cat.username }</h2>\r\n            <p>{ this.props.cat.email }</p>\r\n            <p>Likes: {this.state.likes}</p>\r\n            <p className='add-like-button' onClick={this.setLike}>Add like</p>\r\n          </div>\r\n        )\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport './card_list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => \r\n    <div className='card-list'>\r\n        {\r\n            props.cats.map(cat => \r\n            <Card key={ cat.id } cat={ cat }/>)\r\n        }\r\n    </div>","import React from 'react';\r\n\r\nimport './search_box.styles.css'\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className='search' type='search' placeholder={placeholder}\r\n        onChange={handleChange}>     \r\n    </input>\r\n)","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card_list/card_list.component.jsx';\nimport { SearchBox } from './components/search_box/search_box.component.jsx';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cats: [],\n      searchValue: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ cats: users }))\n    .catch(err => console.log(err));\n  }\n\n  handleChange = e => {\n    this.setState({ searchValue: e.target.value });\n  }\n  \n  render() {\n    const { cats, searchValue } = this.state;\n    const filteredCats = cats.filter(cat => \n      cat.username.toLowerCase().includes(searchValue.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1 className='title'> Super cats </h1>\n        <SearchBox placeholder='Search'\n          handleChange={this.handleChange}/>\n        <CardList cats={filteredCats}></CardList>        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}